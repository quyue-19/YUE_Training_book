# ==============================================
# GEO数据挖掘小尝试：利用clusterProfiler进行富集分析
# 2020-05-28@Yue Qu
# ==============================================

# 用clusterProfiler进行GO、KEGG以及GSEA富集分析

# 1. 安装clusterProfiler及其他R包
==========================
BiocManager::install('clusterProfiler')
# 安装包
source("https://bioconductor.org/biocLite.R")

BiocManager::install("clusterProfiler")  #用来做富集分析
BiocManager::install("topGO")  #画GO图用的
BiocManager::install("Rgraphviz")
BiocManager::install("pathview") #看KEGG pathway的
BiocManager::install("org.Hs.eg.db") #这个包里存有人的注释文件

# 载入包dian
library(clusterProfiler)
library(topGO)
library(Rgraphviz)
library(pathview)
library(org.Hs.eg.db)

# 2. ID转换
==========================
# 对于没有转换的gene ID，clusterProfiler也提供了bitr方法进行转换ID：

Usage:
  bitr(geneID, fromType, toType, OrgDb, drop = TRUE)

Arguments
  geneID       input gene id
  fromType     input id type
  toType       output id type
  OrgDb        annotation db
  drop         drop NA or not

# example:
> x <- c("GPX3",  "GLRX",   "LBP",   "CRYAB", "DEFB1", "HCLS1",   "SOD2",   "HSPA2", 
       "ORM1",  "IGFBP1", "PTHLH", "GPC3",  "IGFBP3","TOB1",    "MITF",   "NDRG1", 
       "NR1H4", "FGFR3",  "PVR",   "IL6",   "PTPRM", "ERBB2",   "NID2",   "LAMB1", 
       "COMP",  "PLS3",   "MCAM",  "SPP1",  "LAMC1", "COL4A2",  "COL4A1", "MYOC",  
       "ANXA4", "TFPI2",  "CST6",  "SLPI",  "TIMP2", "CPM",     "GGT1",   "NNMT",
       "MAL",   "EEF1A2", "HGD",   "TCN2",  "CDA",   "PCCA",    "CRYM",   "PDXK",  
       "STC1",  "WARS",  "HMOX1", "FXYD2", "RBP4",   "SLC6A12", "KDELR3", "ITM2B")
> eg <- bitr(x, fromType="SYMBOL", toType=c("ENTREZID","ENSEMBL"), OrgDb="org.Hs.eg.db"); head(eg)
'select()' returned 1:many mapping between keys and columns
  SYMBOL ENTREZID         ENSEMBL
1   GPX3     2878 ENSG00000211445
2   GLRX     2745 ENSG00000173221
3    LBP     3929 ENSG00000129988
4  CRYAB     1410 ENSG00000109846
5  DEFB1     1672 ENSG00000164825
6  HCLS1     3059 ENSG00000180353

# 3. GO、KEGG富集分析
===========================
# 3.1 GO富集分析
---------------------------
# 在开始富集分析之前先看看GO和KEGG富集分析的方法以及参数：
enrichGO     GO Enrichment Analysis of a gene set. Given a vector of genes, this
             function will return the enrichment GO categories after FDR control.
Usage:
  enrichGO(gene, OrgDb, keyType = "ENTREZID", ont = "MF", pvalueCutoff = 0.05, 
           pAdjustMethod = "BH", universe, qvalueCutoff = 0.2, minGSSize = 10, 
           maxGSSize = 500, readable = FALSE, pool = FALSE)
Arguments:
  gene                 a vector of entrez gene id.
  OrgDb                OrgDb
  keyType              keytype of input gene
  ont                  One of "MF", "BP", and "CC" subontologies or 'ALL'.
  pvalueCutoff         Cutoff value of pvalue.
  pAdjustMethod        one of "holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none"
  universe             background genes
  qvalueCutoff         qvalue cutoff
  minGSSize            minimal size of genes annotated by Ontology term for testing.
  maxGSSize            maximal size of genes annotated for testing
  readable             whether mapping gene ID to gene Name
  pool                 If ont=’ALL’, whether pool 3 GO sub-ontologies

  # 导入数据，这是一个整合数据，在这里我们要用到的只是entrez ID列和最后一列（logFC）：

> library(clusterProfiler)
> degenes <- read.csv('D:/TCGA/microarray_analysis/intersectgenes_logFC_broad.txt',header = T,stringsAsFactors = F,sep = '\t')
> head(degenes)
    Symbol GSM450153 GSM450154 GSM450155              ID      P.Value     Q.Value   adj.P.Val RefSeq.ID Entrez.ID Fold.Change
1     AIM1   -0.7155   -0.8391   -2.3808 ENSG00000112297 4.518321e-02 0.287315306 0.287315306        NA       202    2.555354
2      AK5   -1.9269   -0.6967   -0.5628 ENSG00000154027 7.907520e-05 0.005415775 0.005415775        NA     26289    1.350051
3    ANXA3    4.2110    0.8687   -0.1016 ENSG00000138772 3.122002e-02 0.229588586 0.229588586        NA       306   -2.328736
4 ARHGAP15   -0.0725   -1.5821   -2.0469 ENSG00000075884 6.321948e-05 0.004553170 0.004553170        NA     55843    5.064183
5    ASGR2    1.5563    1.4054    1.2066 ENSG00000161944 1.474010e-02 0.146976591 0.146976591        NA       433    2.061535
6      ATM   -1.4344   -0.4961   -1.9324 ENSG00000149311 1.403235e-02 0.142613364 0.142613364        NA       472    2.313447
> genelist <- degenes$Entrez.ID

# 检查是否有重复
> genelist[duplicated(genelist)]
integer(0)

# 由于clusterProfiler富集分析推荐的输入文件是Entrez ID，因此这里提取的是Entrez ID，接下来就可以进行富集分析了：
> go <- enrichGO(genelist, OrgDb = org.Hs.eg.db, ont='ALL',pAdjustMethod = 'BH',pvalueCutoff = 0.05, 
                 qvalueCutoff = 0.2,keyType = 'ENTREZID')

> head(go)
           ONTOLOGY         ID                                         Description GeneRatio   BgRatio       pvalue
GO:1903039       BP GO:1903039 positive regulation of leukocyte cell-cell adhesion    20/121 226/17381 9.074966e-17
GO:0050870       BP GO:0050870            positive regulation of T cell activation    19/121 215/17381 5.824805e-16
GO:0001819       BP GO:0001819          positive regulation of cytokine production    24/121 409/17381 7.118707e-16
GO:0007159       BP GO:0007159                        leukocyte cell-cell adhesion    23/121 374/17381 1.118047e-15
GO:0022409       BP GO:0022409           positive regulation of cell-cell adhesion    20/121 259/17381 1.289708e-15
GO:1903037       BP GO:1903037          regulation of leukocyte cell-cell adhesion    22/121 343/17381 2.095005e-15
               p.adjust       qvalue
GO:1903039 2.474743e-13 1.898101e-13
GO:0050870 6.470905e-13 4.963113e-13
GO:0001819 6.470905e-13 4.963113e-13
GO:0007159 7.034066e-13 5.395051e-13
GO:0022409 7.034066e-13 5.395051e-13
GO:1903037 9.521797e-13 7.303114e-13
                                                                                                                           geneID
GO:1903039                      84433/6352/1236/915/916/959/972/9308/3113/3117/3119/3122/3458/3565/22914/3932/8013/6504/7494/6375
GO:0050870                           84433/6352/1236/915/916/959/972/9308/3113/3117/3119/3122/3458/3565/22914/3932/6504/7494/6375
GO:0001819 330/84433/834/1236/914/916/959/972/9308/56253/2205/2597/3113/8692/64135/3458/3565/22914/27035/8013/6504/7100/7494/6375
GO:0007159        84433/6352/1236/914/915/916/959/972/9308/2213/3113/3117/3119/3122/3458/3565/22914/3932/8013/6280/6504/7494/6375
GO:0022409                      84433/6352/1236/915/916/959/972/9308/3113/3117/3119/3122/3458/3565/22914/3932/8013/6504/7494/6375
GO:1903037             84433/6352/1236/914/915/916/959/972/9308/2213/3113/3117/3119/3122/3458/3565/22914/3932/8013/6504/7494/6375
           Count
GO:1903039    20
GO:0050870    19
GO:0001819    24
GO:0007159    23
GO:0022409    20
GO:1903037    22

> dim(go)
[1] 524  10
> dim(go[go$ONTOLOGY=='BP',])
[1] 482  10
> dim(go[go$ONTOLOGY=='CC',])
[1] 26 10
> dim(go[go$ONTOLOGY=='MF',])
[1] 16 10
# 看来这些差异基因主要还是富集到BP中了

# 进行简单的可视化
> barplot(go,showCategory=20,drop=T)
> dotplot(go,showCategory=50)

# 还可以绘制GO的网络关系图，但是值得注意的是这里的数据只能是富集一个GO通路（BP、CC或MF）的数据
> go.BP <- enrichGO(genelist, OrgDb = org.Hs.eg.db, ont='BP',pAdjustMethod = 'BH',pvalueCutoff = 0.05, qvalueCutoff = 0.2,keyType = 'ENTREZID')
> plotGOgraph(go.BP)




































